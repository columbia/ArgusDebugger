#include "applog.hpp"
#include <string>

AppLogEvent::AppLogEvent(double timestamp, std::string op, uint64_t _tid, 
    std::string _desc,
    uint32_t _coreid, std::string procname)
:EventBase(timestamp, APPLOG_EVENT, op, _tid, _coreid, procname)
{
    desc = _desc;
}

std::string AppLogEvent::get_prefix()
{
	size_t pos = desc.find_last_of("_");
	if (pos != std::string::npos)
		return desc.substr(0, pos);
	return "none";
}

std::string AppLogEvent::get_state()
{
	size_t pos = desc.find("begin");
	if (pos != std::string::npos)
		return "begin";
	pos = desc.find("end");
	if (pos != std::string::npos)
		return "end";
	return "none";
}

void AppLogEvent::decode_event(bool is_verbose, std::ofstream &outfile)
{
}

void AppLogEvent::streamout_event(std::ofstream &outfile)
{
    EventBase::streamout_event(outfile);
    outfile << "\t" << desc;
	outfile << "\t" << attrs[0] << "\t" << attrs[1] << std::endl;
    //outfile << "\t" << std::hex << serial_num << std::endl;
}

void AppLogEvent::streamout_event(std::ostream &out)
{
    EventBase::streamout_event(out);
    out << "\t" << desc;
	out << "\t" << attrs[0] << "\t" << attrs[1];
}

